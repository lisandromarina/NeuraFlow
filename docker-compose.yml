version: "3.9"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react_frontend
    ports:
      - "3000:5173"
    networks:
      - app_network
    environment:
      - VITE_API_URL=http://localhost:8000
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend:/app:cached
      - /app/node_modules

  redis:
    image: redis:7
    container_name: redis_db
    restart: always
    networks:
      - app_network
    ports:
      - "6379:6379"

  scheduler:
    build: ./backend
    command: python -m main_scheduler_service
    networks:
      - app_network
    environment:
      - REDIS_URL=redis://redis_db:6379/0
    depends_on:
      - redis

  worker:
    build: ./backend
    command: python -m main_trigger_worker
    networks:
      - app_network
    environment:
      - REDIS_URL=redis://redis_db:6379/0
    depends_on:
      - redis
      - postgres

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fastapi_backend
    ports:
      - "8000:8000"
    networks:
      - app_network
    volumes:
      - ./backend/app:/app
    env_file:
      - ./backend/app/.env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/mydatabase
      - REDIS_URL=redis://redis_db:6379/0
    depends_on:
      - redis
      - postgres

  postgres:
    image: postgres:15
    container_name: postgres_db
    restart: always
    networks:
      - app_network
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mydatabase
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data: